{
  "type": "agent",
  "attributes": [
    [
      {
        "_comment": "agent type",
        "attribute": "type",
        "accessor": "lambda arguments:'agent.oai'"
      },
      {
        "_comment": "name of the agent",
        "attribute": "name",
        "accessor": "lambda arguments:arguments['kwargs']['agent'].name"
      },
      {
        "_comment": "agent instructions. To be refactored",
        "attribute": "instructions",
        "accessor": "lambda arguments:arguments['kwargs']['agent'].instructions(arguments['kwargs']['context_variables']) if callable(arguments['kwargs']['agent'].instructions) else arguments['kwargs']['agent'].instructions"
      },
      {
        "_comment": "agent tools",
        "attribute": "tools",
        "accessor": "lambda arguments: [func.__name__ for func in arguments['kwargs']['agent'].functions]"
      },
      {
        "_comment": "tool choice",
        "attribute": "tool_choice",
        "accessor": "lambda arguments:arguments['kwargs']['agent'].tool_choice"
      },
      {
        "attribute": "inference_endpoint",
        "accessor": "lambda arguments: resolve_from_alias(arguments['instance'].__dict__, ['azure_endpoint', 'api_base']) or arguments['kwargs']['inference_endpoint']"
      }
    ],
    [
      {
        "_comment": "LLM Model",
        "attribute": "name",
        "accessor": "lambda arguments:arguments['kwargs']['agent'].model"
      },
      {
        "attribute": "type",
        "accessor": "lambda arguments: 'model.llm.'+arguments['kwargs']['agent'].model"
      }
    ]
  ],
  "events": [
    { "name":"data.input",
      "attributes": [
        {
            "_comment": "this is LLM input",
            "attribute": "query",
            "accessor": "lambda arguments: arguments['kwargs']['history']"
        }
      ]
    },
    {
      "name":"data.output",
      "attributes": [
        {
            "_comment": "this is response from LLM",
            "attribute": "response",
            "accessor": "lambda response: handle_openai_response(response)"
        }
      ]
   }
  ]
}
