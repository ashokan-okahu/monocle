{
  "type": "agent",
  "attributes": [
    [
      {
        "_comment": "provider type ,name , deployment , inference_endpoint",
        "attribute": "type",
        "accessor": "lambda arguments:'agent.oai'"
      },
      {
        "_comment": "name of the agent",
        "attribute": "name",
        "accessor": "lambda arguments:arguments['kwargs']['agent'].name"
      },
      {
        "_comment": "agent tools",
        "attribute": "tools",
        
        "accessor": "lambda arguments: [func.__name__ for func in arguments['kwargs']['agent'].functions]"
      },
      {
        "_comment": "tool choice",
        "attribute": "tool_choice",
        "accessor": "lambda arguments:arguments['kwargs']['agent'].tool_choice"
      },
      {
        "attribute": "inference_endpoint",
        "accessor": "lambda arguments: resolve_from_alias(arguments['instance'].__dict__, ['azure_endpoint', 'api_base']) or arguments['kwargs']['inference_endpoint']"
      }
    ],
    [
      {
        "_comment": "LLM Model",
        "attribute": "name",
        "accessor": "lambda arguments:arguments['kwargs']['agent'].model"
      },
      {
        "attribute": "type",
        "accessor": "lambda arguments: 'model.llm.'+lambda arguments:arguments['kwargs']['agent'].model"
      }
    ]
  ],
  "events": [
    { "name":"data.input",
      "attributes": [

        {
            "_comment": "this is instruction to LLM",
            "attribute": "system",
            "accessor": "lambda arguments: extract_messages(arguments)[0]"
        },
        {
            "_comment": "this is user query to LLM",
            "attribute": "user",
            "accessor": "lambda arguments: extract_messages(arguments)[1]"
        }
      ]
    },
    {
      "name":"data.output",
      "attributes": [
        {
            "_comment": "this is response from LLM",
            "attribute": "assistant",
            "accessor": "lambda response: extract_assistant_message(response)"
        }
      ]
   }
  ]
}
