name: Publish to JFrog

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build from (optional, defaults to main)'
        required: false
        default: 'main'
        type: string
      version:
        description: 'Version of the package to release (beta/alpha versions allowed)'
        required: true
        type: string

jobs:
  publish-to-jfrog:
    environment: ArtifactPublish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch || 'main' }}

      - name: Validate version format
        run: |
          version="${{ inputs.version }}"
          if [[ ! $version =~ ^[0-9]+\.[0-9]+\.[0-9]+(-?(alpha|beta)[0-9]*)?$ ]]; then
            echo "Error: Invalid version format. Expected format: x.y.z, x.y.z-alpha, x.y.z-alphaN, x.y.z-beta, or x.y.z-betaN"
            echo "Provided version: $version"
            exit 1
          fi
          echo "Version format is valid: $version"

      - name: Update version in pyproject.toml
        run: |
          version="${{ inputs.version }}"
          sed -i "s/^version = .*/version = \"$version\"/" pyproject.toml
          echo "Updated version to $version in pyproject.toml"
          grep "^version" pyproject.toml

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Build wheels
        run: |
          chmod +x ./.github/scripts/build.sh
          ./.github/scripts/build.sh

      - name: Install twine
        run: |
          pip install twine

      - name: Publish to JFrog
        env:
          JFROG_URL: ${{ secrets.JFROG_REPOSITORY_URL }}
          JFROG_USERNAME: ${{ secrets.JFROG_USERNAME }}
          JFROG_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
        run: |
          if [[ -z "$JFROG_URL" ]]; then
            echo "Error: JFROG_REPOSITORY_URL secret is not set"
            exit 1
          fi
          if [[ -z "$JFROG_USERNAME" ]]; then
            echo "Error: JFROG_USERNAME secret is not set"
            exit 1
          fi
          if [[ -z "$JFROG_PASSWORD" ]]; then
            echo "Error: JFROG_PASSWORD secret is not set"
            exit 1
          fi
          
          echo "Publishing to JFrog repository: $JFROG_URL"
          python3 -m twine upload --repository-url "$JFROG_URL" dist/* --username "$JFROG_USERNAME" --password "$JFROG_PASSWORD"

      - name: Summary
        run: |
          echo "‚úÖ Successfully published version ${{ inputs.version }} to JFrog repository"
          echo "üì¶ Built from branch: ${{ inputs.branch || 'main' }}"
          echo "üèóÔ∏è Artifacts uploaded from dist/ directory"